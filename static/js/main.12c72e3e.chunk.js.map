{"version":3,"sources":["components/reducer/reducer.js","components/Post/user.js","components/Post/content.js","components/Post/avatar.js","components/Post/events.js","components/Post/date.js","components/actions/actions.js","components/Post/container.js","components/Post/index.js","App.js","index.js"],"names":["initialState","author","avatar","nick","date","text","image","likes","comments","reposts","Joda","Chewbacca","User","this","props","className","id","src","alt","Component","Content","Avatar","Events","state","isLiked","isCommented","isReposted","changeLike","changeRepost","changeComment","onClick","setState","Date","changeText","newText","type","CHANGE_TEXT","payload","changeImage","newImage","CHANGE_IMAGE","changeAuthor","newAuthor","CHANGE_AUTHOR","newCount","CHANGE_LIKE","CHANGE_REPOST","CHANGE_COMMENT","Container","imageUrl","textContent","onChangeImageUrl","e","target","value","onChangeAuthor","console","log","onChangeTextContent","onChange","placeholder","defaultChecked","connect","dispatch","bindActionCreators","Post","store","createStore","action","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12c72e3e.chunk.js","sourcesContent":["import { CHANGE_TEXT,CHANGE_AUTHOR,CHANGE_IMAGE, CHANGE_LIKE, CHANGE_REPOST, CHANGE_COMMENT } from '../../App'\r\n\r\nconst initialState={\r\n\r\n    author:'Anakin Skywalker',\r\n    avatar: 'https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg', \r\n    nick:'@dart_vader',\r\n    date:'~  26 febr',\r\n    text:'WTF? Who is Ray? Why she is Skywalker? Luke...?',\r\n    image:'https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale',\r\n    likes:4,\r\n    comments:4,\r\n    reposts:4\r\n\r\n}\r\nconst Joda = {\r\n    author:'Joda',\r\n    avatar: 'https://upload.wikimedia.org/wikipedia/ru/9/96/CGIYoda.jpg', \r\n    nick:'@joda'\r\n}\r\nconst Chewbacca = {\r\n    author:'Chewbacca',\r\n    avatar: 'https://vignette.wikia.nocookie.net/starwars/images/4/48/Chewbacca_TLJ.png/revision/latest/top-crop/width/720/height/900?cb=20190830144754', \r\n    nick:'@chewbacca'\r\n}\r\n\r\nexport const reducer=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case CHANGE_TEXT: return {...state, text: action.payload}\r\n        case CHANGE_IMAGE: return {...state, image: action.payload}\r\n        case CHANGE_AUTHOR: \r\n            switch(action.payload){\r\n                case 'Anakin Skywalker' : return {\r\n                    ...state,\r\n                    avatar: initialState.avatar,\r\n                    author: action.payload,\r\n                    nick: initialState.nick\r\n                }\r\n                case 'Joda' : return {\r\n                    ...state,\r\n                    avatar: Joda.avatar,\r\n                    author: action.payload,\r\n                    nick: Joda.nick\r\n                }\r\n                case 'Chewbacca' : return {\r\n                    ...state,\r\n                    avatar: Chewbacca.avatar,\r\n                    author: action.payload,\r\n                    nick: Chewbacca.nick\r\n                }\r\n            }\r\n        case CHANGE_LIKE: return {...state, likes: action.payload}\r\n        case CHANGE_REPOST: return {...state, reposts: action.payload}\r\n        case CHANGE_COMMENT: return {...state, comments: action.payload}\r\n        \r\n    }\r\n    return state;\r\n}","import React, { Component } from 'react';\r\n\r\nimport \"./user.css\"\r\n\r\nconst VERIFIED_ICON = \"https://upload.wikimedia.org/wikipedia/commons/e/e4/Twitter_Verified_Badge.svg\";\r\n\r\n\r\nclass User extends Component{\r\n    render(){\r\n        const { nick, author } = this.props;\r\n        return(\r\n            <div className = \"info\"> \r\n                \r\n                    <ul className = \"user__elements\">\r\n                        <li>\r\n                            <span id = \"name\">\r\n                                {author}\r\n                            </span>\r\n                            <img src = {VERIFIED_ICON} alt = '' id = \"verify\" />\r\n                        </li>\r\n                        <li>\r\n                            <span>\r\n                                {nick}\r\n                            </span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\r\n\r\nimport \"./content.css\";\r\n\r\n\r\nclass Content extends Component{\r\n    render(){\r\n        const{ text , image } = this.props;\r\n        return(\r\n            <div className=\"content\">\r\n                <p className=\"inner__text\">\r\n                    { text }\r\n                </p>\r\n                <img src = { image } alt = '' id=\"content__photo\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;","import React, { Component } from 'react';\r\n\r\nimport \"./avatar.css\"\r\n\r\nclass Avatar extends Component{\r\n    render(){\r\n        const{ avatar } = this.props;\r\n        return(\r\n            <img src = {avatar} alt = '' id = \"author\"/>\r\n        )\r\n    }\r\n}\r\nexport default Avatar;","import React, { Component } from 'react';\r\n\r\nimport './events.css';\r\n\r\nclass Events extends Component{\r\n    state={\r\n        isLiked:false,\r\n        isCommented:false,\r\n        isReposted:false\r\n    }\r\n    render(){\r\n\r\n        const { likes, comments, reposts, changeLike, changeRepost, changeComment } = this.props;\r\n        const like=()=>{\r\n            this.state.isLiked ? changeLike(likes-1) : changeLike(likes+1);\r\n            this.setState({\r\n                isLiked:!this.state.isLiked\r\n            })\r\n        }\r\n        const comment=()=>{\r\n            this.state.isCommented ? changeComment(comments-1) : changeComment(comments+1);\r\n            this.setState({\r\n                isCommented:!this.state.isCommented\r\n            })\r\n        }\r\n        const repost=()=>{\r\n            this.state.isReposted ? changeRepost(reposts-1) : changeRepost(reposts+1);\r\n            this.setState({\r\n                isReposted:!this.state.isReposted\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"events\">\r\n              <div className=\"event\">\r\n                  <i onClick={comment} className=\"far fa-comment-alt icon fa-lg\"></i>\r\n                  <span>{comments}</span>\r\n              </div>\r\n                <div className=\"event\">\r\n                    <i onClick={repost} className=\"fas fa-retweet icon fa-lg\"></i>\r\n                    <span>{reposts}</span>\r\n                </div>\r\n                <div className=\"event\">\r\n                    <i onClick={like} className=\"far fa-heart icon fa-lg\"></i>\r\n                    <span>{likes}</span>\r\n                </div>\r\n                <div className=\"event\">\r\n                    <i className=\"fas fa-upload icon fa-lg\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Events;","import React, { Component } from 'react';\r\n\r\nimport './date.css';\r\n\r\n\r\n\r\nclass Date extends Component{\r\n    render(){\r\n        const { date } = this.props;\r\n        return(\r\n            <span>\r\n                {date}\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Date;","import { CHANGE_TEXT,CHANGE_AUTHOR,CHANGE_IMAGE, CHANGE_LIKE, CHANGE_REPOST, CHANGE_COMMENT } from '../../App'\r\n\r\nexport const changeText=(newText)=>{\r\n    return{\r\n        type:CHANGE_TEXT,\r\n        payload:newText\r\n    }\r\n}\r\nexport const changeImage=(newImage)=>{\r\n    return{\r\n        type:CHANGE_IMAGE,\r\n        payload:newImage\r\n    }\r\n}\r\n\r\nexport const changeAuthor=(newAuthor)=>{\r\n    return{\r\n        type:CHANGE_AUTHOR,\r\n        payload:newAuthor\r\n    }\r\n}\r\n\r\nexport const changeLike=(newCount)=>{\r\n    return{\r\n        type:CHANGE_LIKE,\r\n        payload:newCount\r\n    }\r\n}\r\n\r\nexport const changeRepost=(newCount)=>{\r\n    return{\r\n        type:CHANGE_REPOST,\r\n        payload:newCount\r\n    }\r\n}\r\nexport const changeComment=(newCount)=>{\r\n    return{\r\n        type:CHANGE_COMMENT,\r\n        payload:newCount\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport User from './user';\r\nimport Content from './content'\r\nimport Avatar from './avatar'\r\nimport Events from './events';\r\nimport Date from './date'\r\n\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { changeText, changeImage, changeAuthor, changeLike, changeComment, changeRepost } from '../actions/actions'\r\n\r\nimport \"./container.css\";\r\n\r\nclass Container extends Component{\r\n\r\n    state={\r\n        author:this.props.author,\r\n        imageUrl:this.props.image,\r\n        textContent:this.props.text\r\n    }\r\n\r\n    onChangeImageUrl=(e)=>{\r\n        this.setState({ imageUrl: e.target.value })\r\n    }\r\n    onChangeAuthor=(e)=>{\r\n        this.setState({ author: e.target.value })\r\n        console.log(e.target.value)\r\n    }\r\n    onChangeTextContent=(e)=>{\r\n        this.setState({ textContent: e.target.value })\r\n    }\r\n    \r\n\r\n    render(){\r\n        const { changeAuthor, changeText, changeImage } = this.props;\r\n        const dispatchData=()=>{\r\n                changeAuthor(this.state.author);\r\n                changeImage(this.state.imageUrl);\r\n                changeText(this.state.textContent);\r\n        }\r\n        return(\r\n            <>\r\n            <div className =\"container\">\r\n                <Avatar {...this.props}/>\r\n                <div className=\"f\">\r\n                    <div className = \"a\">\r\n                        <User {...this.props}/>\r\n                        <Date {...this.props}/> \r\n                    </div>\r\n                    <Content {...this.props}/>\r\n                    <Events {...this.props}/>\r\n                </div>\r\n            </div>\r\n            <div className='change_data'>\r\n                <label>\r\n                    <input\r\n                        value={this.state.textContent}\r\n                        onChange={this.onChangeTextContent}\r\n                        type='text' \r\n                        placeholder='Post text'\r\n                    />\r\n                    Text content\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        value={this.state.imageUrl}\r\n                        onChange={this.onChangeImageUrl}\r\n                        type='text' \r\n                        placeholder='Image url'\r\n                    />\r\n                    Image URL\r\n                </label> \r\n                <select onChange={this.onChangeAuthor} >\r\n                    <option defaultChecked> Anakin Skywalker </option>\r\n                    <option> Chewbacca </option>\r\n                    <option> Joda </option>\r\n                </select>\r\n\r\n                <button onClick={dispatchData} className='dispatch_data'> Push data</button>\r\n            </div>\r\n         </>\r\n        )\r\n    }\r\n    \r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        author: state.author,\r\n        avatar: state.avatar, \r\n        nick: state.nick,\r\n        date: state.date,\r\n        text: state.text,\r\n        image: state.image,\r\n        likes: state.likes,\r\n        comments: state.comments,\r\n        reposts: state.reposts\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = (dispatch)=>{\r\n    return{\r\n      changeAuthor: bindActionCreators(changeAuthor,dispatch),\r\n      changeImage: bindActionCreators(changeImage,dispatch),\r\n      changeText: bindActionCreators(changeText,dispatch),\r\n      changeLike: bindActionCreators(changeLike,dispatch),\r\n      changeComment: bindActionCreators(changeComment,dispatch),\r\n      changeRepost: bindActionCreators(changeRepost,dispatch) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionsToProps)(Container);","import React from 'react';\r\n\r\nimport Container from './container';\r\n\r\nfunction Post(){\r\n    return(\r\n        <div>\r\n            <Container/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { reducer } from './components/reducer/reducer';\nimport Post from './components/Post/index';\n\n\nexport const CHANGE_TEXT='CHANGE_TEXT';\nexport const CHANGE_AUTHOR='CHANGE_AUTHOR';\nexport const CHANGE_IMAGE='CHANGE_IMAGE';\nexport const CHANGE_LIKE='CHANGE_LIKE'\nexport const CHANGE_REPOST='CHANGE_REPOST'\nexport const CHANGE_COMMENT='CHANGE_COMMENT'\n\nconst store = createStore(reducer);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Post/>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}